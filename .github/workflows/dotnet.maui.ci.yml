name: .NET MAUI CI Build 

on:
  push        :
    tags:
      - '*'
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: write

env: { DOTNET_NOLOGO: true, DOTNET_CLI_TELEMETRY_OPTOUT: true, DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true, }

jobs:
  test-maui-desktop-app-on-windows-platform:
    runs-on: windows-latest
    name   : Test MAUI Desktop App On Windows Platform
    steps:

      #--- Install Environment ---#
    
      - 
        name: Checkout
        uses: actions/checkout@v4.1.1
      -
        name: Setup .NET Core 7
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
          include-prerelease: true
      -
        name: Setup JDK 11
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '11'
          distribution: 'microsoft'
      -
        name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1
        with:
          vs-prerelease: true
      -
        name: Install MAUI Workloads
        run : | 
          dotnet workload install maui --ignore-failed-sources
      -
        name: Install Chocolatey (Windows Package Manager)
        uses: crazy-max/ghaction-chocolatey@v3.0.0
        with:
          args: -h  
      -
        name: Install Edge Webview2 Runtime
        run : |
          choco install webview2-runtime

      #--- Build ---#
          
      - 
        name: Restore dependencies
        run : |
          dotnet restore
      -
        name: Build
        working-directory: ./WorkScheduleReminder.MAUIBlazor
        run : |
          msbuild WorkScheduleReminder.MAUIBlazor.csproj -r -p:Configuration=Debug -p:RestorePackages=false

      #--- _Normal_ Testing ---#

      -
        name: Test
        working-directory: ./WorkScheduleReminder.Testing
        run : |
          dotnet test --verbosity detailed

      #--- Mutation Testing ---#

      -
        name: Mutation Test
        working-directory: ./WorkScheduleReminder.Testing
        run : |
          dotnet   tool restore
          dotnet dotnet-stryker
      -
        name: Upload Mutation Report
        uses: actions/upload-artifact@v3.1.3
        with:
          name: dotnet-stryker-mutation-report
          path: ./WorkScheduleReminder.Testing/StrykerOutput/**/**/*.html

      #--- Publish ---#
      
      -
        name: Decode .pfx Certificate
        run : |
          echo "${{ secrets.WINDOWS_WORK_SCHEDULE_REMINDER_PFX }}" > WorkScheduleReminder.pfx.base64
          certutil -decode WorkScheduleReminder.pfx.base64 WorkScheduleReminder.pfx
      -
        name: Add .pfx Certificate To Store
        run : |
          certutil -user -q -p ${{ secrets.WINDOWS_WORK_SCHEDULE_REMINDER_PFX_PASSWORD }} -importpfx WorkScheduleReminder.pfx NoRoot
      -
        name: Overwrite launchSettings.json File
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ./WorkScheduleReminder.MAUIBlazor/Properties/launchSettings.json
          contents  : |
            { "profiles": { "Windows Machine": { "commandName": "MsixPackage", /* Unpack The App. Replace With "MsixPackage" If You Want To Change Back To MsixPackage */ "nativeDebugging": false } } }
          write-mode: overwrite
      -
        name: Publish
        working-directory: ./WorkScheduleReminder.MAUIBlazor
        run : |
          dotnet publish WorkScheduleReminder.MAUIBlazor.csproj -c Release -f:net7.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="${{ secrets.WINDOWS_WORK_SCHEDULE_REMINDER_PFX_THUMBPRINT }}" /p:WindowsPackageType=MSIX
      -
        name: Upload .msix Installer
        uses: actions/upload-artifact@v3.1.3
        with:
          name: work-schedule-reminder-installer-windows10-x64
          path: .\**\AppPackages\**\*.*
          retention-days: 7



      -
        name: Compress Installer
        working-directory: ./WorkScheduleReminder.MAUIBlazor/bin/Release/net7.0-windows10.0.19041.0/win10-x64/AppPackages
        run : |
          Compress-Archive -DestinationPath 'work_schedule_reminder_installer_windows10_x64.zip' -LiteralPath '.'
      -
        name: Create Version
        id  : create_version
        run : |
          echo "VERSION=$(Get-Date -Format dd-MMM-yyyy.HH:mm)" >> "$GITHUB_OUTPUT"
      -
        name: Create Release
        uses: actions/create-release@v1
        id  : create_release
        with:
          draft     : false
          prerelease: false
          release_name: Release ver ${{ steps. create_version.outputs.VERSION }}
          tag_name: v${{ steps.create_version.outputs.VERSION }}
          body: |
            Changes in this release: N/A          
        env:
          GITHUB_TOKEN: ${{ github.token }}
      -
        name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WorkScheduleReminder.MAUIBlazor/bin/Release/net7.0-windows10.0.19041.0/win10-x64/AppPackages/work_schedule_reminder_installer_windows10_x64.zip
          asset_name: work_schedule_reminder_installer_windows10_x64
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ github.token }}








