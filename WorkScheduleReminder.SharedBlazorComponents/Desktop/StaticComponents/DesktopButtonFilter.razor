@using WorkScheduleReminder.SharedBlazorComponents.Desktop.PopupAndSubMenus

<MudPaper Class="d-flex flex-row flex-wrap align-center"
		  Elevation="0">
	<MudMenu Class=""
			 Size="Size.Small"
			 FullWidth="false"
			 DisableElevation="true"
			 Dense="true"
			 AnchorOrigin="Origin.BottomCenter"
			 TransformOrigin="Origin.TopCenter"
			 MaxHeight="250">
		<ActivatorContent>
			<MudButton StartIcon="@Icons.Material.Filled.Filter"
					   Size="Size.Small">
				<MudText>Filter</MudText>
			</MudButton>
		</ActivatorContent>
		<ChildContent>
			@foreach (MenuItem menuItem in MenuItems)
			{
				<MudMenuItem OnClick="menuItem.ToggleVisible"
							 AutoClose="true">
					<MudPaper Class="d-flex flex-row gap-2 align-center"
							  Style="background-color:transparent"
							  Elevation="0">
						<MudIcon Size="Size.Small"
								 Icon=@menuItem.Icon />
						<MudText>@menuItem.Name</MudText>
					</MudPaper>
				</MudMenuItem>
			}
		</ChildContent>
	</MudMenu>
</MudPaper>
@foreach (MenuItem menuItem in MenuItems)
{
	<MudOverlay Visible=menuItem.Visible
				DarkBackground="true"
				AutoClose="true"
				OnClick="menuItem.ToggleVisible">
		@menuItem.Child
	</MudOverlay>
}

@code
{
	public record MenuItem
	{
		public string Name { get; set; } = null!;
		public string Icon { get; set; } = null!;
		public bool Visible { get; set; } = false;
		public RenderFragment Child { get; set; } = null!;
		public void ToggleVisible() => Visible = !Visible;
	}

	public List<MenuItem> MenuItems { get; set; } = new List<MenuItem>();

	protected override async Task OnInitializedAsync()
	{
		await base
		.OnInitializedAsync();
		MenuItems.Add(new MenuItem()
		{
			Name = "Sections",
			Icon = Icons.Material.Filled.ViewKanban,
			Child = @<FilterSections  @onclick:stopPropagation />
		});
		MenuItems.Add(new MenuItem()
		{
			Name = "Due day",
			Icon = Icons.Material.Filled.CalendarToday,
			Child = @<FilterDueDay    @onclick:stopPropagation />
		});
		MenuItems.Add(new MenuItem()
			{
			Name = "Assignees",
			Icon = Icons.Material.Filled.People,
			Child = @<FilterAssignees @onclick:stopPropagation />
		});
		MenuItems.Add(new MenuItem()
		{
			Name = "Tags",
			Icon = Icons.Material.Filled.Tag,
			Child = @<FilterTag       @onclick:stopPropagation />
		});
		MenuItems.Add(new MenuItem()
		{
			Name = "Messages",
			Icon = Icons.Material.Filled.Message,
			Child = @<FilterMessages  @onclick:stopPropagation />
		});

	}
}
