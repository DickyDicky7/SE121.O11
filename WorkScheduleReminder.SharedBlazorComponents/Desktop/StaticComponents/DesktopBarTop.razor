@using WorkScheduleReminder.SharedBlazorComponents.Desktop.PopupAndSubMenus

<MudPaper Class="d-flex flex-row align-center pa-2 justify-space-between"
		  Style="background-color:transparent;"
		  Elevation="0"
		  Width="100%">
	@* Toolbar1 *@
	<MudPaper Class="d-flex flex-row flex-wrap gap-2"
			  Elevation="0">
		@if (ActiveViewType != Helper.ViewType.MyDayView)
		{
			<DesktopOtherViewTitle />
			<DesktopButtonMember IsIndividualToWorkspaceChanged=
                                "IsIndividualToWorkspaceChanged" />
			@if (ActiveViewType == Helper.ViewType.WorkspaceView)
			{
				<DesktopButtonView   />
			}
			@if (ActiveViewType == Helper.ViewType.WorkspaceView || ActiveViewType == Helper.ViewType.CustomView)
			{
				<DesktopButtonFilter />
			}
			<DesktopButtonMore />
		}
		else
		{
			<DesktopMyDayViewTitle />
		}
	</MudPaper>
	@* Toolbar2 *@
	<MudPaper Class="d-flex flex-row flex-wrap gap-2 py-2"
			  Elevation="0">
		<MudIconButton Class="rounded-cycle"
					   Size="Size.Small"
					   Icon="@Icons.Material.Filled.Sync" />
		<MudIconButton Class="rounded-cycle"
					   Size="Size.Small"
					   Icon="@Icons.Material.Filled.Notifications"
					   OnClick="ToggleNotifiVisible" />
		<MudIconButton Class="rounded-cycle"
					   Size="Size.Small"
					   Icon="@Icons.Material.Filled.Search"
					   OnClick="ToggleSearchVisible" />
	</MudPaper>
</MudPaper>
<MudOverlay Class="border-2"
			Visible="@NotifiVisible"
			DarkBackground="true"
			AutoClose="true"
			OnClick="ToggleNotifiVisible">
	<Notification @onclick:stopPropagation />
</MudOverlay>
<MudOverlay Visible="@SearchVisible"
			DarkBackground="true"
			AutoClose="true"
			OnClick="ToggleSearchVisible">
	<SearchName   @onclick:stopPropagation />
</MudOverlay>

@code
{
	[CascadingParameter(Name = nameof(ActiveViewType))]
	public Helper.ViewType ActiveViewType { get; set; }

	[Parameter]
	public bool                IsIndividualToWorkspace        { get; set; }
	[Parameter]
	public EventCallback<bool> IsIndividualToWorkspaceChanged { get; set; }

	public bool NotifiVisible { get; set; } = false;
	public bool SearchVisible { get; set; } = false;

	public void ToggleNotifiVisible()
	{
		NotifiVisible = !NotifiVisible;
	}

	public void ToggleSearchVisible()
	{
		SearchVisible = !SearchVisible;
	}
}
