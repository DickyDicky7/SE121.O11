<MudPaper Class="d-flex flex-row flex-wrap align-center"
          Elevation="0">
    <MudMenu Class=""
             Size="Size.Small"
             FullWidth="false"
             DisableElevation="true"
             Dense="true"
             AnchorOrigin="Origin.BottomCenter"
             TransformOrigin="Origin.TopCenter"
             MaxHeight="250">
        <ActivatorContent>
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert"
                           Size="Size.Small" />
        </ActivatorContent>
        <ChildContent>
            @if (Type == Helper.ViewType.DefaultView)
            {
                @foreach (string Item in DefaultViewItem)
                {
                    <MudMenuItem AutoClose=false>
                        <MudText Style="background-color:transparent">
                            @Item
                        </MudText>
                    </MudMenuItem>
                }
            }
            else if (Type == Helper.ViewType.CustomView)
            {
                @foreach (string Item in CustomViewItem)
                {
                    <MudMenuItem AutoClose=false>
                        <MudText Style="background-color:transparent">
                            @Item
                        </MudText>
                    </MudMenuItem>
                }
            }
            else if (Type == Helper.ViewType.WorkspaceView)
            {
                @foreach (string Item in WorkspaceItem)
                {
                    <MudMenuItem AutoClose=false>
                        <MudText Style="background-color:transparent">
                            @Item
                        </MudText>
                    </MudMenuItem>
                }
            }
        </ChildContent>
    </MudMenu>
</MudPaper>


@code
{
    [Parameter]
    public Helper.ViewType Type { get; set; }

    public List<string> DefaultViewItem { get; set; } = new List<string>();
    public List<string> CustomViewItem { get; set; } = new List<string>();
    public List<string> WorkspaceItem { get; set; } = new List<string>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        DefaultViewItem.Add("Clear completed");
        DefaultViewItem.Add("Multi-select");
        DefaultViewItem.Add("Print");

        CustomViewItem.Add("Edit");
        CustomViewItem.Add("Delete");

        WorkspaceItem.Add("Board activity");
        WorkspaceItem.Add("Board tags");
        WorkspaceItem.Add("Sections");
        WorkspaceItem.Add("make private");
        WorkspaceItem.Add("Multi-select");
        WorkspaceItem.Add("View archived items");
        WorkspaceItem.Add("Save as template");
        WorkspaceItem.Add("Archive board");
        WorkspaceItem.Add("Leave board");
    }
}
