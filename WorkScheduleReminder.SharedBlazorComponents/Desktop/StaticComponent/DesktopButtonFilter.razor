@using WorkScheduleReminder.SharedBlazorComponents.Desktop.PopUpAndSubMenu
<MudPaper Class="d-flex flex-row flex-wrap align-center"
          Elevation="0">
    <MudMenu Class=""
             Size="Size.Small"
             FullWidth="false"
             DisableElevation="true"
             Dense="true"
             AnchorOrigin="Origin.BottomCenter"
             TransformOrigin="Origin.TopCenter"
             MaxHeight="250">
        <ActivatorContent>
            <MudButton StartIcon="@Icons.Material.Filled.Filter"
                       Size="Size.Small">
                <MudText>Filter</MudText>
            </MudButton>
        </ActivatorContent>
        <ChildContent>
            @foreach (MenuItem menuItem in MenuItems)
            {
                <MudMenuItem AutoClose="false">
                    <MudMenu AnchorOrigin="Origin.CenterRight"
                             TransformOrigin="Origin.TopLeft"
                             ActivationEvent="MouseEvent.MouseOver">
                        <ActivatorContent>
                            <MudPaper Class="d-flex flex-row gap-2 align-center"
                                      Style="background-color:transparent"
                                      Elevation="0">
                                <MudIcon Size="Size.Small"
                                         Icon=@menuItem.Icon />
                                <MudText>@menuItem.Name</MudText>
                            </MudPaper>
                        </ActivatorContent>
                        <ChildContent>
                            @switch (menuItem.Name)
                            {
                                case "Sections":
                                    <FilterSections @onclick:stopPropagation />
                                    break;
                                case "Due day":
                                    <FilterDueDay @onclick:stopPropagation />
                                    break;
                                case "Assignees":
                                    <FilterAssignees @onclick:stopPropagation />
                                    break;
                                case "Tags":
                                    <FilterTag @onclick:stopPropagation />
                                    break;
                                case "Messages":
                                    <FilterMessages @onclick:stopPropagation />
                                    break;
                            }
                        </ChildContent>
                    </MudMenu>
                </MudMenuItem>
            }
        </ChildContent>
    </MudMenu>
</MudPaper>

@code
{
    public record MenuItem()
    {
        public string Name { get; set; } = null!;
        public string Icon { get; set; } = null!;
    }
    public List<MenuItem> MenuItems { get; set; } = new List<MenuItem>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        MenuItems.Add(new MenuItem() { Name = "Sections", Icon = Icons.Material.Filled.ViewKanban });
        MenuItems.Add(new MenuItem() { Name = "Due day", Icon = Icons.Material.Filled.CalendarToday, });
        MenuItems.Add(new MenuItem() { Name = "Assignees", Icon = Icons.Material.Filled.People });
        MenuItems.Add(new MenuItem() { Name = "Tags", Icon = Icons.Material.Filled.Tag });
        MenuItems.Add(new MenuItem() { Name = "Messages", Icon = Icons.Material.Filled.Message });

    }
}
