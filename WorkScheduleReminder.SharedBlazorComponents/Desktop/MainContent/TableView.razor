@using WorkScheduleReminder.SharedBlazorComponents.Desktop.PopUpAndSubMenus

@page "/table"
<MudPaper Class="d-flex flex-column gap-2 pa-2"
          Style="background-color:transparent; overflow:hidden;"
          Elevation="0"
          Width="100%"
          Height="100%">
    <MudPaper Class="d-flex flex-row gap-2 align-center justify-space-between"
              Elevation="0"
              Width="100%">
        <MudSwitch @bind-Checked="@ColumnPropertiesList[0].Visible"
                   Size="Size.Small"
                   Label="@ColumnPropertiesList[0].Name"
                   Color="Color.Success" />
        <MudSwitch @bind-Checked="@ColumnPropertiesList[1].Visible"
                   Size="Size.Small"
                   Label="@ColumnPropertiesList[1].Name"
                   Color="Color.Success" />
        <MudSwitch @bind-Checked="@ColumnPropertiesList[2].Visible"
                   Size="Size.Small"
                   Label="@ColumnPropertiesList[2].Name"
                   Color="Color.Success" />
        <MudSwitch @bind-Checked="@ColumnPropertiesList[3].Visible"
                   Size="Size.Small"
                   Label="@ColumnPropertiesList[3].Name"
                   Color="Color.Success" />
        <MudSwitch @bind-Checked="@ColumnPropertiesList[4].Visible"
                   Size="Size.Small"
                   Label="@ColumnPropertiesList[4].Name"
                   Color="Color.Success" />
    </MudPaper>
    <MudPaper Class="d-flex flex-column gap-2"
              Style="background-color:transparent;overflow:scroll;"
              Elevation="0"
              Width="100%"
              Height="100%">
        @foreach (Section Section in SectionList)
        {
            <MudPaper Class="d-flex flex-row align-center justify-space-between"
                      Style="position:sticky;top:0px;z-index:50;"
                      Elevation="0"
                      Width="100%">
                <MudPaper Class="d-flex flex-row align-center"
                          Elevation="0">
                    <MudToggleIconButton @bind-Toggled=@(Section.Hidden)
                                         Size="Size.Small"
                                         ToggledSize="Size.Small"
                                         Icon="@Icons.Material.Filled.Visibility"
                                         ToggledIcon="@Icons.Material.Filled.VisibilityOff"
                                         Color="Color.Info"
                                         ToggledColor="Color.Default" />
                    <MudText>
                        @Section.Name
                    </MudText>
                </MudPaper>
                <MudPaper Class="d-flex flex-row align-center"
                          Elevation="0">
                    <MudTextField @bind-Value=@Section.NewTask
                                  Placeholder="@($"Add task to {Section.Name}")"
                                  Immediate="true"
                                  DisableUnderLine="true"
                                  FullWidth="false"
                                  Variant="Variant.Outlined"
                                  Margin="Margin.Dense"
                                  Clearable="true"
                                  TextUpdateSuppression="false"
                                  OnKeyDown="(KeyboardEventArgs e)=>AddTask(e, Section)" />
                    <MudIconButton Icon="@Icons.Material.Filled.MoreVert"
                                   Size="Size.Small" />
                </MudPaper>
            </MudPaper>
            <MudDataGrid Style="" hidden="@Section.Hidden"
                         T="Task"
                         Items="Section.TaskList"
                         FixedHeader="true"
                         Virtualize="true"
                         ColumnResizeMode="ResizeMode.Column"
                         SortMode="SortMode.None"
                         RowClick="OnTaskClick">
                <Columns>
                    @*Title*@
                    <TemplateColumn Hidden="@(!ColumnPropertiesList[0].Visible)"
                                    Title="@ColumnPropertiesList[0].Name">
                        <CellTemplate>
                            <MudPaper Class="d-flex flex-row align-center jutify-content-start"
                                      Elevation="0"
                                      Width="100%"
                                      Height="50px">
                                <MudText>
                                    @context.Item.Title
                                </MudText>
                            </MudPaper>
                        </CellTemplate>
                    </TemplateColumn>
                    @*Tag*@
                    <TemplateColumn Hidden="@(!ColumnPropertiesList[1].Visible)"
                                    Title="@ColumnPropertiesList[1].Name">
                        <CellTemplate>
                            <MudPaper Class="align-center justify-content-start"
                                      Style="overflow:scroll;display:grid;grid-template-columns:repeat(3,1fr);grid-gap:2px;"
                                      Elevation="0"
                                      Width="100%"
                                      Height="50px">
                                @foreach (Tagging Tagging in context.Item.TaggingList)
                                {
                                    <MudChip Text="@Tagging.Name"
                                             Color="Tagging.Color"
                                             Variant="Variant.Text"
                                             Size="Size.Small" />
                                }
                            </MudPaper>
                        </CellTemplate>
                    </TemplateColumn>
                    @*Assignee*@
                    <TemplateColumn Hidden="@(!ColumnPropertiesList[2].Visible)"
                                    Title="@ColumnPropertiesList[2].Name">
                        <CellTemplate>
                            <MudPaper Class="align-center justify-content-start"
                                      Style="overflow:scroll;display:grid;grid-template-columns:repeat(4,1fr);grid-gap:2px;"
                                      Elevation="0"
                                      Width="100%"
                                      Height="50px">
                                @foreach (Assignee Assignee in context.Item.AssigneeList)
                                {
                                    <MudAvatar Elevation="0"
                                               Rounded="true"
                                               Size="Size.Small">
                                        <MudImage Src="@Assignee.AvatarURL" />
                                    </MudAvatar>
                                }
                            </MudPaper>
                        </CellTemplate>
                    </TemplateColumn>
                    @*Due date*@
                    <TemplateColumn Hidden="@(!ColumnPropertiesList[3].Visible)"
                                    Title="@ColumnPropertiesList[3].Name">
                        <CellTemplate>
                            <MudPaper Class="d-flex flex-row align-center justify-content-start"
                                      Elevation="0"
                                      Width="100%"
                                      Height="50px">
                                <MudText>
                                    @DueDateStringAssemble(context.Item.Dueday, context.Item.Duetime)
                                </MudText>
                            </MudPaper>
                        </CellTemplate>
                    </TemplateColumn>
                    @*Attachment*@
                    <TemplateColumn Hidden="@(!ColumnPropertiesList[4].Visible)"
                                    Title="@ColumnPropertiesList[4].Name">
                        <CellTemplate>
                            <MudPaper Class="d-flex flex-row align-center justify-content-start"
                                      Elevation="0"
                                      Width="100%"
                                      Height="50px">

                            </MudPaper>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
                <NoRecordsContent>
                    <MudText>There's nothing here :(</MudText>
                </NoRecordsContent>
                <LoadingContent>
                    <MudText>Loading...</MudText>
                </LoadingContent>
            </MudDataGrid>
        }
    </MudPaper>
</MudPaper>
<MudOverlay Visible="@TaskDetailVisible"
            DarkBackground="true"
            AutoClose="true"
            OnClick="(()=>{TaskDetailVisible=!TaskDetailVisible;})">
    <TaskDetail @onclick:stopPropagation />
</MudOverlay>

@code {
    public bool TaskDetailVisible { get; set; } = false;
    public record ColumnProperties
    {
        public string Name { get; set; } = string.Empty;
        public bool Visible { get; set; } = true;
    }
    public List<ColumnProperties> ColumnPropertiesList = new();

    public record Assignee
    {
        public string AvatarURL { get; set; } = default!;
    }
    public record Tagging
    {
        public string Name { get; set; } = default!;
        public Color Color { get; set; } = default!;
    }
    public record Task
    {
        public string Title { get; set; } = default!;
        public IList<IBrowserFile> FileList { get; set; } = new List<IBrowserFile>();
        public DateTime Dueday { get; set; } = default!;
        public TimeSpan Duetime { get; set; } = default!;
        public List<Tagging> TaggingList { get; set; } = new();
        public List<Assignee> AssigneeList { get; set; } = new();
    }
    public record Section
    {
        public string Name { get; set; } = default!;
        public string NewTask { get; set; } = string.Empty;
        public List<Task> TaskList { get; set; } = new();
        public bool Hidden { get; set; } = false;
    }
    public List<Section> SectionList = new();
    public string DueDateStringAssemble(DateTime _Date, TimeSpan _Time)
    {
        return $"{_Date.ToString("dd")}.{_Date.ToString("MM")}.{_Date.ToString("yy")} {_Time.ToString("hh")}:{_Time.ToString("mm")}";
    }
    public void AddTask(KeyboardEventArgs e, Section _Section)
    {
        if (e.Code == "Enter" && !string.IsNullOrWhiteSpace(_Section.NewTask))
        {
            _Section.TaskList.Add(new Task()
                {
                    Title = _Section.NewTask,
                    Duetime = new(DateTime.Now.Hour, DateTime.Now.Minute, DateTime.Now.Second),
                    Dueday = DateTime.Now,
                });
            _Section.NewTask = string.Empty;
        }
    }
    public void OnTaskClick()
    {
        TaskDetailVisible = !TaskDetailVisible;
        //do something more
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        ColumnPropertiesList.Add(new ColumnProperties() { Name = "Title" });
        ColumnPropertiesList.Add(new ColumnProperties() { Name = "Tags" });
        ColumnPropertiesList.Add(new ColumnProperties() { Name = "Assignees" });
        ColumnPropertiesList.Add(new ColumnProperties() { Name = "Due date" });
        ColumnPropertiesList.Add(new ColumnProperties() { Name = "Attachments", Visible = false });

        List<Tagging> tempTaggingList = new();
        tempTaggingList.Add(new Tagging() { Name = "Tag1", Color = Color.Primary });
        tempTaggingList.Add(new Tagging() { Name = "Tag2", Color = Color.Secondary });
        tempTaggingList.Add(new Tagging() { Name = "Tag3", Color = Color.Tertiary });
        tempTaggingList.Add(new Tagging() { Name = "Tag4", Color = Color.Info });
        tempTaggingList.Add(new Tagging() { Name = "Tag5", Color = Color.Success });
        List<Assignee> tempAssigneeList = new();
        tempAssigneeList.Add(new Assignee() { AvatarURL = Helper.GetResource("/images/catsayhello.png") });
        tempAssigneeList.Add(new Assignee() { AvatarURL = Helper.GetResource("/images/catsayhello.png") });
        tempAssigneeList.Add(new Assignee() { AvatarURL = Helper.GetResource("/images/catsayhello.png") });
        tempAssigneeList.Add(new Assignee() { AvatarURL = Helper.GetResource("/images/catsayhello.png") });
        
        @foreach (int i in Enumerable.Range(1, 4))
        {
            List<Task> tempTaskList = new();
            @foreach (int j in Enumerable.Range(1, 4))
            {
                tempTaskList.Add(new Task()
                    {
                        Title = $"Task {j}",
                        Duetime = new(DateTime.Now.Hour, DateTime.Now.Minute, DateTime.Now.Second),
                        Dueday = DateTime.Now,
                        TaggingList = tempTaggingList,
                        AssigneeList = tempAssigneeList,
                    });
            }
            SectionList.Add(
                new Section()
                    {
                        Name = $"Section {i}",
                        TaskList = tempTaskList
                    }
            );
        }
    }
}
