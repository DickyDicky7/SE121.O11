@using WorkScheduleReminder.SharedBlazorComponents.Desktop.PopUpAndSubMenu

<MudPaper Class="d-flex flex-column gap-2 justify-start pa-2"
          Style="border-radius:20px;"
          Elevation="0"
          Width="500px"
          Height="80%" @attributes="AdditionalAttributes">
    @*link and buttons*@
    <MudPaper Class="d-flex flex-row pa-2"
              Elevation="0"
              Width="100%">
        <MudText>abc/def/-taskname-</MudText>
        <MudPaper Class="d-flex flex-grow-1" Elevation="0" />
        <MudPaper Class="d-flex flex-row gap-2"
                  Elevation="0">
            <MudToggleIconButton Class="rounded-cycle"
                                 Size="Size.Small"
                                 ToggledSize="Size.Small"
                                 Title="Add to My day"
                                 ToggledTitle="Remove form My day"
                                 Icon="@Icons.Material.Filled.AddCircle"
                                 ToggledIcon="@Icons.Material.Filled.AddCircle"
                                 Color="Color.Default"
                                 ToggledColor="Color.Tertiary" />
            <MudToggleIconButton Class="rounded-cycle"
                                 Size="Size.Small"
                                 ToggledSize="Size.Small"
                                 Title="Mark as done"
                                 ToggledTitle="Mark as undone"
                                 Icon="@Icons.Material.Filled.Done"
                                 ToggledIcon="@Icons.Material.Filled.Done"
                                 Color="Color.Default"
                                 ToggledColor="Color.Tertiary" />
            <MudIconButton Class="rounded-cycle"
                           Size="Size.Small"
                           Title="Archive task"
                           Icon="@Icons.Material.Filled.Archive"
                           Color="Color.Default" />
        </MudPaper>
    </MudPaper>
    @*title*@
    <MudText Class="mx-2"
             Typo="Typo.h4"
			 Style="font-weight:bold;">
        @Title
    </MudText>
    @*remind me and tag*@
    <MudPaper Class="d-flex flex-row gap-2 px-2"
              Elevation="0">
        <MudButton Class="rounded-pill"
                   Size=Size.Small
                   StartIcon="@Icons.Material.Filled.Alarm"
                   Color="Color.Default"
				   OnClick="ToggleReminderVisible">
            Remind me
        </MudButton>
        <MudButton Class="rounded-pill align-content-start"
                   Size=Size.Small
                   StartIcon="@Icons.Material.Filled.Tag"
                   Color="Color.Default"
				   OnClick="ToggleTagVisible">
            Tag
        </MudButton>
    </MudPaper>
    @*note*@
    <MudPaper Class="d-flex flex-column gap-1 px-2"
              Elevation="0">
        <MudText Typo="Typo.subtitle1">Note</MudText>
		<MudTextField @bind-Value="Note"
                      Class=""
                      Placeholder="Name your subtask"
                      Immediate="true"
                      DisableUnderLine="true"
                      FullWidth="true"
                      Variant="Variant.Outlined"
                      Lines="3" />
    </MudPaper>
    @*subtasks*@
    <MudPaper Class="d-flex flex-column gap-1 px-2"
              Elevation="0">
        <MudText Typo="Typo.subtitle1">SubTasks</MudText>
		<MudTextField @bind-Value="NewSubTask"
                      Class=""
                      Placeholder="Name your subtask"
                      Immediate="true"
                      DisableUnderLine="true"
                      FullWidth="true"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense" />
        @*for go here*@
    </MudPaper>
    @*attachments*@
    <MudPaper Class="d-flex flex-column gap-1 px-2"
              Elevation="0">
        <MudText Typo="Typo.subtitle1">Attachments</MudText>
        <MudFileUpload Class="flex-1"
                       InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20"
                       InputStyle="opacity:0"
                       T="IReadOnlyList<IBrowserFile>"
                       OnFilesChanged="OnInputFileChanged"
                       AppendMultipleFiles="true"
                       Hidden="false"
        @ondragenter=@SetDragClass @ondragleave=@ClearDragClass @ondragend=@ClearDragClass>
            <ButtonTemplate>
                <MudPaper Class="@DragClass"
                          Elevation="0"
                          Outlined="true"
                          Width="100%">
					<MudText>
                        Drag or drop files here or click
                    </MudText>
                </MudPaper>
            </ButtonTemplate>
        </MudFileUpload>
        @foreach (IBrowserFile file in FileList)
        {
            <MudChip Text="@file.Name" />
        }
        <MudButton Class="rounded-pill"
                   Size="Size.Small"
                   Color="Color.Error"
                   Disabled="@(!FileList.Any())"
                   OnClick="Clear">
            Clear
        </MudButton>
    </MudPaper>
</MudPaper>
<MudOverlay Class="border-2"
            Visible="ReminderVisible"
            DarkBackground="true"
            AutoClose="true"
            ZIndex="10"
			OnClick="ToggleReminderVisible">
    <Reminder @onclick:stopPropagation />
</MudOverlay>
<MudOverlay Class="border-2"
            Visible="TagVisible"
            DarkBackground="true"
            AutoClose="true"
            ZIndex="10"
			OnClick="ToggleTagVisible">
    <Tag @onclick:stopPropagation />
</MudOverlay>

@code
{
    public bool      TagVisible { get; set; } = false;
    public bool ReminderVisible { get; set; } = false;
    [Parameter]
    public string Title { get; set; } = string.Empty;
    [Parameter]
	public string Note       { get; set; } = string.Empty;
    [Parameter]
	public string NewSubTask { get; set; } = string.Empty;
    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object>? AdditionalAttributes { get; set; }

	public const string DEFAULT_DRAG_CLASS = "relative rounded-lg border-dashed border-2 pa-2 z-10";
	public string DragClass { get; set; }  = DEFAULT_DRAG_CLASS;
	public List<IBrowserFile> FileList { get; set; } = new List<IBrowserFile>();

	public void OnInputFileChanged(InputFileChangeEventArgs inputFileChangeEventArgs)
    {
        ClearDragClass();
		IReadOnlyList<IBrowserFile>   files =
		inputFileChangeEventArgs.GetMultipleFiles();
		foreach (     IBrowserFile file in  files)
        {
            FileList.Add(file);
        }
    }

	public void Clear()
    {
        FileList.Clear();
        ClearDragClass();
	}

	public void SetDragClass()
	{
		DragClass = $"{DEFAULT_DRAG_CLASS} mud-border-primary";
	}

	public void ClearDragClass()
	{
		DragClass =    DEFAULT_DRAG_CLASS;
    }

	public void ToggleTagVisible()
    {
		TagVisible = !
		TagVisible;
    }

	public void ToggleReminderVisible()
    {
		ReminderVisible = !
		ReminderVisible;
    }
}
